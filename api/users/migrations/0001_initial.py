# Generated by Django 4.0.5 on 2022-06-27 03:12

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('metadata', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('location', models.CharField(max_length=150, null=True, verbose_name='location')),
                ('employer', models.CharField(max_length=150, null=True, verbose_name='employer')),
                ('title', models.CharField(max_length=150, null=True, verbose_name='title')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('password', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[(1, 'Created'), (2, 'Pending'), (3, 'Approved')], db_index=True, default=1, max_length=10)),
                ('role', models.CharField(choices=[('MEMBER', 'member'), ('MENTOR', 'mentor'), ('INTERNAL', 'internal'), ('ANONYMOUS', 'anonymous')], db_index=True, default='anonymous', max_length=10)),
                ('available_time', models.JSONField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('metadata', models.ManyToManyField(blank=True, related_name='user_set', related_query_name='user', to='metadata.metadata', verbose_name='Metadata')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(check=models.Q(('status__in', [1, 2, 3])), name='valid_user_status'),
        ),
    ]

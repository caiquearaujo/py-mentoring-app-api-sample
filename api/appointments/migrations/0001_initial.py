# Generated by Django 4.0.5 on 2022-06-27 03:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('metadata', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(db_index=True, verbose_name='Start time')),
                ('end_time_expected', models.DateTimeField(db_index=True, verbose_name='Expected end time')),
                ('end_time', models.DateTimeField(blank=True, db_index=True, default=None, null=True, verbose_name='End time')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Scheduled'), (2, 'Canceled'), (3, 'Concluded')], db_index=True, verbose_name='Status')),
                ('date_created', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Date of Creation')),
                ('expertise', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expertise_id', to='metadata.metadata', verbose_name='Expertise')),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='member_id', to=settings.AUTH_USER_MODEL, verbose_name='Member')),
                ('mentor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mentor_id', to=settings.AUTH_USER_MODEL, verbose_name='Mentor')),
                ('mentorship_area', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mentorship_area_id', to='metadata.metadata', verbose_name='Mentorship')),
            ],
            options={
                'db_table': 'appointments',
            },
        ),
        migrations.AddConstraint(
            model_name='appointment',
            constraint=models.CheckConstraint(check=models.Q(('status__in', [1, 2, 3])), name='valid_appointment_status'),
        ),
    ]
